/**
 * epclaim.planner
 * 
 */
package epclaim.planner;

import java.util.ArrayList;

import epclaim.compiler.Action;
import epclaim.compiler.FunctionSignature;
import epclaim.compiler.Knowledge;
import epclaim.compiler.KnowledgeCollection;

/**
 * @author Usman
 * holds the Place Action and its call 
 * The action call is in the form of FunctionSignature 
 * 
 */
public class PlacePlanAction {
	private FunctionSignature actionCall;
	private Action action;
	/**
	 * @param actionCall
	 * @param action
	 */
	public PlacePlanAction(FunctionSignature actionCall, Action action) {
		super();
		this.actionCall = actionCall;
		this.action = action;
		this.actionCall.setDuration(this.action.getDuration());
	}
	
	/**
	 * process the call on action and return the add effects
	 * @return
	 */
	public KnowledgeCollection getAddEffectsCollection(){
		KnowledgeCollection collection = new KnowledgeCollection();
		ArrayList<String> actionParams = action.getMessage().getVariables();
		for(FunctionSignature addEffect:action.getAddEffects().getFunctionSignatureCollection()){			
			ArrayList<String> parameters = new ArrayList<String>();
			ArrayList<String> addEffectParams = addEffect.getVariables();
			for(int i=0;i<addEffectParams.size();i++){
				String param = addEffectParams.get(i);
				if(!param.startsWith("?"))
					parameters.add(param);
				else parameters.add(this.actionCall.getVariables().get(i));
			}
			collection.add(new Knowledge(addEffect.getName(), parameters));
		}
		return collection;
	}
	@Override
	public String toString() {
		String str = "";
		str+= "s:"+actionCall.getStartTime()+" e:"+actionCall.getEndTime()+" "+ actionCall.toString() + " " + actionCall.getDuration();
		str+="\n" + this.getAddEffectsCollection();
		return str;
	}
	
}
