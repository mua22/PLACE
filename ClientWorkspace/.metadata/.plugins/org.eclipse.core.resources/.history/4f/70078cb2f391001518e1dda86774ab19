package epclaim.compiler;

import java.util.ArrayList;

import epclaim.tasks.PremitiveTask;
import epclaim.tasks.Send;
import epclaim.utils.ActionType;
import epclaim.utils.CommonStringUtils;
import epclaim.utils.ConditionLogic;

/**
 * Represent the EPClaim Action Object
 * @author Usman
 *
 */
public class Action {
	private String name;
	protected FunctionSignature message;
	protected FunctionSignatureCollection conditions;
	protected FunctionSignatureCollection deleteEffects;
	protected FunctionSignatureCollection addEffects;
	private ConditionLogic conditionLogic;
	private ActionType actionType;
	private Send actionMessage;
	private int duration;
	
	public int getDuration() {
		return duration;
	}

	public Action(FunctionSignature message) {
		this();
		this.message = message;
	}

	/**
	 * initializes the collection variables. 
	 */
	public Action() {
		super();
		this.conditions = new FunctionSignatureCollection();
		this.addEffects = new FunctionSignatureCollection();
		this.deleteEffects = new FunctionSignatureCollection();
	}

	public FunctionSignatureCollection getDeleteEffects() {
		return deleteEffects;
	}

	public FunctionSignatureCollection getAddEffects() {
		return addEffects;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public FunctionSignatureCollection getConditions() {
		return conditions;
	}

	public void setConditions(FunctionSignatureCollection conditions) {
		this.conditions = conditions;
	}

	public static ArrayList<PremitiveTask> getTasks() {
		ArrayList<PremitiveTask> tasks = new ArrayList<PremitiveTask>();
		return this.tasks;
	}

	

	public ConditionLogic getConditionLogic() {
		return conditionLogic;
	}

	public void setDuration(int duration) {
		this.duration = duration;
	}

	public Send getActionMessage() {
		return actionMessage;
	}

	public void setActionMessage(Send actionMessage) {
		this.actionMessage = actionMessage;
	}

	public Action(String name) {
		super();
		this.name = name;
		conditions = new FunctionSignatureCollection();
		this.conditionLogic = ConditionLogic.NOTHING;
		//this.tasks = new ArrayList<PremitiveTask>();
		this.actionType = ActionType.ORDERED;
	}

	
	

	public ActionType getActionType() {
		return actionType;
	}

	public boolean add(FunctionSignature e) {
		return conditions.add(e);
	}

	public void setActionType(ActionType actionType) {
		this.actionType = actionType;
	}

	

	public FunctionSignature getMessage() {
		return message;
	}

	public void setMessage(FunctionSignature message) {
		this.message = message;
	}
	/**
	 * Sets the Function Signature of the action also sets its name to be the same as of presented in function Signature
	 * e.g. moveAgent(?artifactName)
	 * where moveagent would be set as the name of the Action
	 * @param message
	 */
	public void setFunctionSignature(FunctionSignature message) {
		this.setName(message.getName());
		this.message = message;
	}
	public boolean addCondition(FunctionSignature e) {
		return conditions.add(e);
	}
	public boolean addAddEffect(FunctionSignature e) {
		return addEffects.add(e);
	}
	public boolean addDeleteEffect(FunctionSignature e) {
		return deleteEffects.add(e);
	}
	public void setConditionLogic(ConditionLogic conditionLogic) {
		
		this.conditionLogic = conditionLogic;
	}
	@Override
	public String toString() {
		String str = "\n";
		str+= CommonStringUtils.tabs() + name+CommonStringUtils.CurlyBraceOpen(true)
				+"message="+message+"\n"
				+"conditions="+conditions
				+ ", actionMessage=" + actionMessage + ", duration=" + duration
				;
				
				
		return str+CommonStringUtils.CurlyBraceClose(true);
		
//		return "Action [name=" + name + ", message=" + message
//				+ ", conditions=" + conditions + ", conditionLogic="
//				+ conditionLogic 
//				+ ", actionMessage=" + actionMessage + ", duration=" + duration
//				+ ",tasks= "+tasks
//				+ "]";
	}
		
}
