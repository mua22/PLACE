/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options{  static = true;}PARSER_BEGIN(PlanStringConverter)package JSHOP2Wrapper.planStringConverter;
package epclaim.compiler.grammar;
import epclaim.compiler.*;
import epclaim.utils.*;
import java.util.ArrayList;
import epclaim.tasks.*;
import java.io.*;
public class PlanStringConverter{  public static void main(String args []) throws ParseException  {
    String test = "Plan cost: 3.0 (!op_move r1 r2) (!op_turnontv r2) (!op_watchtv r2) --------------------";
	byte[] bytes = test.getBytes();
	ByteArrayInputStream bais = new ByteArrayInputStream(bytes);
	InputStreamReader isr = new InputStreamReader(bais);    PlanStringConverter parser = new PlanStringConverter(isr);
    FunctionSignatureCollection collection = this.getFunctionSignatureCollection();
    System.out.println(collection);    }}PARSER_END(PlanStringConverter)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN : /* OPERATORS */{  < Plan : "plan" >| < COST : "cost" >| < EXCLAMATION : "!" >
| < COLON: ":" >| < OBRA : "(" >
| < CBRA : ")" >
| < FLOAT: (["0"-"9"])+"."(["0"-"9"])+>
| <NAME :["a"-"z","A"-"Z","_"] ( ["a"-"z","A"-"Z","_","0"-"9"] )* > }TOKEN :{  < CONSTANT : (< DIGIT >)+ >| < #DIGIT : [ "0"-"9" ] >}public FunctionSignatureCollection getFunctionSignatureCollection() :{
  FunctionSignatureCollection collection = new FunctionSignatureCollection();
  Token token;}

{
  	(< Plan >
	)
	{
	  return collection;	}}